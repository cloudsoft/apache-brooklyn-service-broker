buildscript {
	ext {
		springBootVersion = '1.2.2.RELEASE'
		brooklynVersion = '0.13.0-SNAPSHOT'
	}
	
	repositories {
		// NOTE: You should declare only repositories that you need here
		mavenLocal()
		mavenCentral()
        
        jcenter()
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
        maven { url "https://plugins.gradle.org/m2/" }

        maven {
            url "https://artifactory.cloudsoftcorp.com/artifactory/libs-release-local"
            if (project.hasProperty('artifactory_user')) credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
            name = "cloudsoft-repo"
        }
	}
	dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

version = '0.1.10'
group = 'org.cloudfoundry.incubator.servicebroker.brooklyn'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'
ext {
	springCloudServiceBrokerVersion = '1.0.0.BUILD-SNAPSHOT'
	baseName = 'apache-brookyn-service-broker'
	version =  '0.1.10'
}

war {
    baseName = baseName
    version =  version
}

repositories {
	// NOTE: You should declare only repositories that you need here
	mavenLocal()
	mavenCentral()
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "https://repository.apache.org/content/repositories/snapshots" }
}

configurations {
	providedRuntime
    compile.exclude module: "spring-boot-starter-tomcat"
}


dependencies {
	compile("org.springframework.cloud:spring-cloud-cloudfoundry-service-broker:${springCloudServiceBrokerVersion}")
	testCompile(group: "org.springframework.cloud", name: "spring-cloud-cloudfoundry-service-broker", version: "${springCloudServiceBrokerVersion}", classifier: "tests")

	compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
  
	compile("org.apache.brooklyn:brooklyn-rest-client:${brooklynVersion}"){
		exclude module: "slf4j-log4j12"
		exclude module: "jetty-server"
	}
    compile("org.apache.brooklyn:brooklyn-core:${brooklynVersion}"){
        exclude module: "slf4j-log4j12"
        exclude module: "jetty-server"
    }
    compile("org.apache.httpcomponents:httpclient:4.5")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.2'
}

if (project.hasProperty('artifactory_user'))
  artifactory {
    contextUrl = (project.hasProperty('artifactory_contextUrl') ? "${artifactory_contextUrl}" : 'https://artifactory.cloudsoftcorp.com/artifactory/')
    publish {
        repository {
            repoKey = 'libs-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
    }
  }

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.web
        }
    }
}
